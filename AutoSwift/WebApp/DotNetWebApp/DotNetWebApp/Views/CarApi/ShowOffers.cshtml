@model IEnumerable<DotNetWebApp.Models.OfferCarModel>
@{
    ViewData["Title"] = "Show Offers";
}

<div class="page-wrapper">
    <header class="page-header">
        <h1>Available Car Offers</h1>
    </header>

    <!-- Sort and Filter Container -->
    <div class="sort-filter-container">
        <!-- Dropdown to choose sorting options -->
        <select id="sorting-options" class="sort-by-dropdown">
            <option value="CarId">Car ID (Default)</option>
            <option value="PriceDayAsc">Price per Day (Ascending)</option>
            <option value="PriceDayDesc">Price per Day (Descending)</option>
            <option value="PriceInsuranceAsc">Insurance Price (Ascending)</option>
            <option value="PriceInsuranceDesc">Insurance Price (Descending)</option>
            <option value="ExpirationDate">Expiration Date</option>
        </select>
        <button id="sort-button" class="sort-filter-btn">
            <i class="fas fa-sort"></i> Sort
        </button>
    </div>

    <!-- Price filter section -->
    <div class="filter-section">
        <label for="min-price">Min Price ($):</label>
        <input type="number" id="min-price" placeholder="Min Price" class="filter-input" />

        <label for="max-price">Max Price ($):</label>
        <input type="number" id="max-price" placeholder="Max Price" class="filter-input" />

        <button id="filter-button" class="sort-filter-btn">
            <i class="fas fa-filter"></i> Filter
        </button>
    </div>

    <div class="car-grid">
        @foreach (var item in Model)
        {
            <div class="car-card">
                <!-- Car details display -->
                <div class="car-info">
                    <h2>@item.Car.CarBrand @item.Car.CarModel</h2>
                    <p class="car-license">License Plate: @item.Car.LicensePlate</p>
                    <p class="car-location">Location: @item.Car.Localization</p>

                    <div class="price-info">
                        <p><strong>Price per Day:</strong> $@item.PriceDay</p>
                        <p><strong>Insurance Price:</strong> $@item.PriceInsurance</p>
                        <p><strong>Expiration Date:</strong> @item.ExpirationDate.ToString("MM/dd/yyyy")</p>
                    </div>

                    <a asp-action="Edit" asp-route-id="@item.Id" asp-route-platform="@item.Platform" class="btn rent-btn">Rent</a>
                </div>
            </div>
        }
    </div>
</div>

<script>
    // On page load, check if a sorting option is saved in localStorage
    window.onload = function () {
        var savedSortBy = localStorage.getItem('sortBy');
        if (savedSortBy) {
            document.getElementById('sorting-options').value = savedSortBy;
        }

        var savedMinPrice = localStorage.getItem('minPrice');
        var savedMaxPrice = localStorage.getItem('maxPrice');

        if (savedMinPrice) {
            document.getElementById('min-price').value = savedMinPrice;
        }

        if (savedMaxPrice) {
            document.getElementById('max-price').value = savedMaxPrice;
        }
    }

    // Handle sorting selection
    document.getElementById('sort-button').onclick = function () {
        var sortBy = document.getElementById('sorting-options').value;

        // Save the selected sort option in localStorage
        localStorage.setItem('sortBy', sortBy);

        var urlParams = new URLSearchParams(window.location.search);
        var carBrand = urlParams.get('CarBrand');
        var carModel = urlParams.get('CarModel');

        if (!carBrand || !carModel) {
            alert("CarBrand or CarModel not found in URL.");
            return;
        }

        // Get price filter values
        var minPrice = document.getElementById('min-price').value;
        var maxPrice = document.getElementById('max-price').value;

        // Save price filter values in localStorage
        localStorage.setItem('minPrice', minPrice);
        localStorage.setItem('maxPrice', maxPrice);

        // Construct the new URL with the selected sort option and existing query parameters
        var newUrl = '@Url.Action("SortOffers", "CarApi")?CarBrand=' + carBrand
            + '&CarModel=' + carModel
            + '&sortBy=' + sortBy
            + '&minPrice=' + minPrice
            + '&maxPrice=' + maxPrice;

        window.location.href = newUrl;
    }

    // Handle price filter application
    document.getElementById('filter-button').onclick = function () {
        var minPrice = document.getElementById('min-price').value;
        var maxPrice = document.getElementById('max-price').value;

        // Save filter values in localStorage
        localStorage.setItem('minPrice', minPrice);
        localStorage.setItem('maxPrice', maxPrice);

        var urlParams = new URLSearchParams(window.location.search);
        var carBrand = urlParams.get('CarBrand');
        var carModel = urlParams.get('CarModel');
        var sortBy = document.getElementById('sorting-options').value;

        if (!carBrand || !carModel) {
            alert("CarBrand or CarModel not found in URL.");
            return;
        }

        // Construct the new URL with the selected filter and sorting options
        var newUrl = '@Url.Action("SortOffers", "CarApi")?CarBrand=' + carBrand
            + '&CarModel=' + carModel
            + '&sortBy=' + sortBy
            + '&minPrice=' + minPrice
            + '&maxPrice=' + maxPrice;

        window.location.href = newUrl;
    }
</script>
